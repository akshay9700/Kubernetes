---
apiVersion: v1    
kind: Namespace  # Pod, Namespace, Service is defined here  
metadata:        
  name: sample   # namespace name is given here
---
apiVersion: v1 #  API version of the Kubernetes object being defined
kind: Pod # Pod, ReplicationController, ReplicaSet, Deployment, StatefulSet, DaemonSet is given here
metadata: 
  name: samplewebapppod # name for the pod is given here
  labels:
    app: samplewebapp # This line should match with the service selector 
  namespace: sample   
spec:
  containers:
  - name: samplewebappctr   # name for the container is given here
    image: akshay0909/sample:0.1   # docker image is given here
    ports:
      - containerPort: 3000 # container port on which the app is running to be mentioned here
---
apiVersion: v1 #  API version of the Kubernetes object being defined
kind: Service  # Pod, Namespace, Service
metadata:
  name: samplesvc # name for the service is given here
spec:
  type: NodePort # Nodeport, ClusterIP, LoadBalancer
  selector:
    app: samplewebapp # Defines how the service selects which pods to route traffic to based on labels.   POD LABEL IS GIVEN HERE
  ports:
  - port: 80   # The port on which the service is exposed within the cluster.
    targetPort: 3000 # The port on the pod to which the traffic should be forwarded.
    nodePort: 30786 #  The port on each node where the service is exposed externally
...

# To run this file follow the below command
# kubectl apply -f filename.yml
# if you want to run POD and service files different just seperate it and run the below commands
# kubectl apply -f pod.yml
# kubectl apply -f service.yml






# only pod 


---
apiVersion: v1
kind: Pod 
metadata:
   name: webpod
   labels: 
     app: samplewebapp 
spec:
  containers:
  - name: htmlwebapp
    image: sam:0.1
    ports:
      - containerPort: 80
...

# To run this file follow the below command
# kubectl apply -f pod.yaml
# and also needed service file 
# kubectl apply -f podsvc.yaml
